openapi: 3.0.0
info:
  x-logo:
    backgroundColor: "#FAFAFA"
    url: "https://user-images.githubusercontent.com/1558992/70169428-b2f3a580-16c2-11ea-90a9-12ef570d046b.png"
  title: Utrust for Developers
  description: |
    Welcome to the Utrust documentation for Developers. Here you will find
    everything you need to start accepting crypto payments in your online store
    or website easily with Utrust.


    # Basics

    In this section you can find a set of concepts that will help you understand
    how Utrust handles payments, so that you can integrate our payment method
    without any trouble.

    ## 0. Before you start

    Be aware Utrust Payments have the following limitations:

    > üíµ You can only create orders in **EUR, GBP or USD** (and you must choose one!);

    > ‚è∞ Our payment confirmation can take **up to 2 hours**;

    > üåç Our Payment Widget is only available in **English**.


    ## 1. Checkout process

    Our payment flow is **asynchronous**; the customer has 15 minutes to choose
    the cryptocurrency and issue a transaction in the respective blockchain,
    sending the requested funds to the address we provided.

    Once we detect the pending transaction, which usually happens in a matter of
    seconds, we recognize the payment and redirect the user to the merchant
    success callback URL.

    Upon confirmation of the transaction, which can take up to 2 hours, we send
    a notification to the merchant store or website via a [webhook]().

    In more detail, this flow has 6 stages:

    <div style="max-width: 650px; margin: 28px auto;">
      <img src="https://user-images.githubusercontent.com/1558992/70262908-1b0ebe00-178d-11ea-8825-2d341e7cba1b.png" alt="Checkout process diagram" />
    </div>

    1. [**Merchant**] On checkout, the merchant system sends the order details to
       create it on our server, getting a `redirect_url` in the response 
       (see [the create order endpoint](https://docs.api.utrust.com/#operation/createOrder)).
    2. [**Merchant**] Redirects users to the provided URL, which shows them the
       Utrust Payment widget.
    3. [**Utrust**] Users pay for the order, seeing a "Payment Complete"
       message. Utrust also sends them an email with the detected payment
       details. This completes the user interaction.
    4. [**Utrust**] Redirects the customer back to the `return_url` provided
       when the order was created.
    5. [**Utrust**] It takes some time to confirm transactions (minutes or hours,
       depending on the blockchain). Once confirmed, Utrust sends an HTTP
       request to the Merchant system notifying the payment was received.
    6. [**Store**] Verifies and validates the request, and, if valid, finalizes
       the order.


    ## 2. Try our flow

    The best way to learn about what we do is by trying it out yourself. For
    this you need an Ethereum wallet and some "test" money.
    Any wallet will do, but we recommend using
    [MetaMask](https://https://metamask.io/) due to its ease of use.
    After installing, make sure to change to the Ropsten Test Network, which
    is what we use in our sandbox environment.

    ![MetaMask_wallet](https://user-images.githubusercontent.com/1558992/70264200-e94b2680-178f-11ea-8212-885c5235c553.png)

    When you are ready, go to our [Sandbox online store](https://sandbox.store.utrust.com)
    and give it a spin by selecting an item and proceeding to checkout.
    Choose the Utrust payment method.
    Once you proceed to the payment, you will see Utrust Payment Widget.

    ![Utrust_payment_widget_on_sandbox_store](https://user-images.githubusercontent.com/1558992/70264232-f700ac00-178f-11ea-8b21-5c3708efcb3d.png)

    Select the ETH currency. The widget will then show you a QR Code with the
    payment details. If using Metamask, change to the Manual tab, and copy the
    address.

    ![Utrust_payment_widget_awaiting](https://user-images.githubusercontent.com/1558992/70264267-07188b80-1790-11ea-816b-bf4e0839f7d4.png)

    Open Metamask, and send the shown value in ETH to the provided address.

    ![MetaMask_filled](https://user-images.githubusercontent.com/1558992/70264269-07188b80-1790-11ea-9655-e162e90f6d3b.png)

    Wait some seconds, and the widget should change to show the payment is
    complete.

    ![Utrust_payment_widget_completed](https://user-images.githubusercontent.com/1558992/70264270-07188b80-1790-11ea-98dd-d0f3d45d7f28.png)

    This is not a payment confirmation yet, but it's a good indication that the
    payment will go through. However, only when we have a real confirmation will
    we send you the notifications, via [webhook](#section/Basics/4.-Webhook). 


    ## 3. Build the order

    Now that you understand the flow and tried it, let's build it!

    ### 3.1. Sandbox vs. Production

    To distinguish between sandbox and production environments we have ‚Äú**sandbox-utrust.com**‚Äù and ‚Äú**utrust.com**‚Äù domains, respectively. All the endpoints should use the respective domain for the environment that you wish 
    to work on.

    ### 3.2. Sign up on Sandbox

    First you need a Merchant account on our testing environment (sandbox), [follow this link](https://merchants.sandbox-utrust.com/onboarding/sign-up).
    Fill the form and there you go! You should have access.
    ![Merchant_Dashboard_signup](https://user-images.githubusercontent.com/1558992/70264271-07b12200-1790-11ea-810a-dafcc0b0d56f.png)

    You can add more users to the production account if needed, ask us.

    ### 3.3. Authentication

    You‚Äôll receive an email with the information needed in order to access it. After that, the first thing you need is to generate credentials for your store, which can be done in the Utrust Merchant Dashboard. Once inside, go to the Organization Settings section and click on the ‚ÄúGenerate Credentials‚Äù button:

    ![Merchant_dashboard_organization](https://user-images.githubusercontent.com/1558992/70264272-07b12200-1790-11ea-989d-9ea206e32874.png)

    You‚Äôll then be prompted with the `API Key` and `Webhooks Secret` for your store. Save this information somewhere, as you won‚Äôt be able to access it again (you can, of course, generate new credentials).

    ![Merchant_dasboard_new_credentials](https://user-images.githubusercontent.com/1558992/70264273-07b12200-1790-11ea-91c5-70ca1b2ef16b.png)

    ### 3.4. Creating the order

    Once you have all the information needed from a customer and all that‚Äôs missing is paying, you can inform us of that by calling the [create order endpoint](https://docs.api.utrust.com/#operation/createOrder). Don't forget 
    to add the `api key` on the headers (as a Bearer token).
    The response is a URL to which you should redirect the customer, on success we will redirect them to the `return_url` and on customer cancel to the `cancel_url` (if present).

    ### 3.5. Add the Utrust method option on Checkout

    When listing our payment method in your store, you can use [these assets](#section/Basics/5.-Assets).

    ### 3.6. Going into production

    All tests went good and you want to move into production? To create a `production` account [go here](https://merchants.utrust.com/).
    You can sign up in production, but your account needs to be revised and enabled by the Utrust team.
    If you need to add more users, please let us know and we will add them manually to the same Organization.
    You will have to generate your production credentials.

    ## 4. Webhook

    You might want to update the status of your Order automatically when we confirm the payment. We use webhooks to send you that information. 
    This events need to be validated so that you are sure they are real and coming from Utrust, that's for what the `Webhooks Secret` is for.
    Our [integrations](#section/Integrations) handle this automatically. Alternativaly, you can use our [libraries](#section/Libraries) to verify the payload signature or manually using the instructions in our [API Reference 
    Webhooks](https://docs.api.utrust.com/#tag/Webhooks) section. 

    ### Being notified of payment confirmation

    After the payment is confirmed, we will send an HTTP POST request to whatever you specified as `callback_url` when creating the order. All the information about 
    being ready for these requests (and validating them) are explained also on the [API Reference Webhooks](https://docs.api.utrust.com/#tag/Webhooks).

    You will need to get ready for the following steps:

    1. Setting up a webhook on the endpoint you defined as `callback_url`;
    2. Check if the signature is valid;
    3. If is valid, check the `event_type`, it can be:

        a. If it's `ORDER.PAYMENT.RECEIVED` ‚Üí you should change the Order to `paid` or whatever you have as the next step in your orders process;

        b. If it's `ORDER.PAYMENT.CANCELLED` ‚Üí you should change the Order to `cancelled`;
        
        c. If it's `ORDER.PAYMENT.FAILED` ‚Üí you should change the Order to `cancelled` or `failed`;

    4. Then you need to reply our request:

        a. If everything went well ‚Üí status: **200 OK**; with no body or a valid JSON (e.g. `{ success: true }`);

        b. If something went wrong ‚Üí status: **500 Internal Server Error**;

    This way we know what happened on your server and we can stop retrying to send the webhook. We will do it once a minute for 10 minutes. 

    Check more about this on our [API Reference Webhooks](https://docs.api.utrust.com/#tag/Webhooks).

    ## 5. Assets

    You might need our logo for listing it on the payment methods options and your website footer. The following kit should provide you with the necessary options for that: 
    [Utrust_Merchant_kit.zip](https://github.com/utrustdev/utrust-developers-page/files/3917494/Utrust.merchant.kit.v2.zip)

    # Integrations

    ## Magento 1
    Start accepting cryptocurrencies in your Magento 1 store with our module hosted on [GitHub](https://github.com/utrustdev/utrust-for-magento1).

    ## Magento 2
    Start accepting cryptocurrencies in your Magento 2 store with our module hosted on [GitHub](https://github.com/utrustdev/utrust-for-magento2).

    ## PrestaShop
    Start accepting cryptocurrencies in your PrestaShop store with our module hosted on [GitHub](https://github.com/utrustdev/utrust-for-prestashop).

    ## WooCommerce
    Start accepting cryptocurrencies in your WooCommerce store with our module hosted on [GitHub](https://github.com/utrustdev/utrust-for-woocommerce).

    # Libraries

    ## PHP

    We've put in place a simple PHP library to get you started easily with the core functionalities of our payment method. Available via composer:
    ```
    composer require utrust/utrust
    ```
    Check the code hosted on [GitHub](https://github.com/utrustdev/utrust-php).

    # APIs 

    Utrust provides two API's for your use: Stores API and Merchants API.

    [Utrust API Reference ‚Üí](https://docs.api.utrust.com)

paths: false
