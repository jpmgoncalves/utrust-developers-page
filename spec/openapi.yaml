openapi: 3.0.0
info:
  x-logo:
    backgroundColor: "#FAFAFA"
    url: "https://user-images.githubusercontent.com/1558992/70169428-b2f3a580-16c2-11ea-90a9-12ef570d046b.png"
  title: Docs for Developers
  description: |
    Accept crypto payments in your online store or website, easily with Utrust. 
    This is the place where you can find all the tools to integrate Utrust Payment method in your store or website.

    In the [Basics](#section/Basics) section you can find a set of concepts so that you can be able to do a proper integration of our payment method.


    # Basics

    ## Before you start

    You should be aware and accept that we have the following limitations:

    > üíµ You can only create orders in **EUR, GBP or USD (choose one!).**

    > ‚è∞ You have to consider that our payment confirmation can take **up to 2 hours**.

    > üåç Our Payment Widget only supports **English** language.

    ## 1. Checkout process

    Our payment flow is asynchronous: the customer has 15 minutes to choose the cryptocurrency and pay by sending the funds to the address we provide. 
    Then we confirm the transaction and send a notification to the merchant via a webhook (up to 2 hours). 
    This is different from a synchronous credit card payment.

    What customer sees and doesn't see has 7 stages:

    <div style="max-width: 650px; margin: 28px auto;">
      <img src="https://user-images.githubusercontent.com/1558992/70262908-1b0ebe00-178d-11ea-8825-2d341e7cba1b.png" alt="Checkout process diagram" />
    </div>

    1. [**Store**] On checkout, the customer creates the order. The store server gets the `redirect_url` on the HTTP response to the endpoint¬†**[/stores/orders](https://docs.api.utrust.com/#operation/createOrder)**.
    2. [**Store**] Redirects the customer to the UTRUST Payment widget.
    3. [**Utrust**] The customer pays the order and sees "Payment Complete" message. Utrust also sends the customer an email with the payment proof. Payment is only detected at this stage, Utrust still needs to confirm it, 
    but everything is completed on the customer side.
    4. [**Utrust**] Redirects the customer back to the store (`return_url`).
    5. [**Store**] Shows "Thank you for your order" page.
    6. [**Utrust**] Depending on the cryptocurrency chosen, it might take some minutes or even hours (Bitcoin) to confirm the transaction on the blockchain. Once confirmed, Utrust sends an HTTP request to the Store server 
    with the event type¬†`ORDER.PAYMENT.RECEIVED`.
    7. [**Store**] Verifies and validates the signature in the HTTP request body (using the `webhooks secret` to decode it) and, if valid, changes the Order state to "Paid" (our to whatever your CMS wants as a next state). 
    The Store usually also sends the email with the invoice to the customer at this stage.

    ## 2. Try our flow

    The best way to learn about what we do is by testing it. For this you should prepare an external wallet with fake money. 
    Our payment method accepts any external wallet but for testing we recommend using [MetaMask](https://https://metamask.io/), an Ethereum wallet. 
    After installing, you need to change to the Ropsten Test Network for testing with our sandbox environment:

    ![MetaMask_wallet](https://lh5.googleusercontent.com/5JE4WZ-VGoqxIcSZ_fh5JSLwBpvDX2KBqVrxeEz_Cbjp1RdWUGQ7l5j8Ht1LwN-lXJqJEI-buS33eLlhQ0OEv5hQKgmNWoM1JEf_DJWcLNUXR3_NjfLbk5_1nCWFqALMlp-c2utN)

    Once you have it, go to our [Sandbox online store](https://sandbox.store.utrust.com) to try it!
    Select an item and proceed to checkout. You will see Utrust payment method, choose it.
    Once you proceed to the payment, you will see Utrust Payment Widget which should look like this:

    ![Utrust_payment_widget_on_sandbox_store](https://lh4.googleusercontent.com/OwJl2McnvNGKC3EWWhkQYXUCLu7bmp_qREkTGg9qh9N2X0Wsle3cFCbccOWzw6Zk4i0OhfF0MzpRpaJDZL0ZDUVux5hpnrz_sqEYvRi_7VQigfBgZqM-fc8DSbX3PlBG-ptM9X2G)

    By selecting the ETH currency, you‚Äôll access to the address and amount (choose Manual):

    ![Utrust_payment_widget_awaiting](https://lh6.googleusercontent.com/MCRm5bRcNBy5ddzqZOkx5omRkxg50hFCQqKOWXICr7OjiiWha2V22YZy0BLBkwpbZ0YhmIiau6Fi8fc3fa-25sB2pBW4Z2eW0OhxdAwsn4pT9xS9DsBaQSr5bT3STeiwPooaBXFI)

    Afterwards, input those into MetaMask to fulfill the payment:

    ![https://lh5.googleusercontent.com/LJa2DKFYFptnoJMsSga6UDNxSG_OpsOjtUGtCtDKR212TdjapunbB1OWgY2X54VmggLJkVmEisEibCeRk8Rkr7zy7ui36xmo-VBBEvp8Cjwuj1_5mtS5g6xV_53AMNzpW7KefVPy](https://lh5.googleusercontent.com/LJa2DKFYFptnoJMsSga6UDNxSG_OpsOjtUGtCtDKR212TdjapunbB1OWgY2X54VmggLJkVmEisEibCeRk8Rkr7zy7ui36xmo-VBBEvp8Cjwuj1_5mtS5g6xV_53AMNzpW7KefVPy)

    After a short time the payment should be completed and you should see this page:

    ![https://lh4.googleusercontent.com/DUay-Hpbwsf3-dROkK2F0q946F5FDshNzTApo0jUPud2OR7oShhmhbV_gbPo9gCS2N8dWzoRx7FKOxyqrVb07jiETwYPa-zaCXZq5gh_jRQpo4zbZHW-Ibsp18k2suKg4iXxFOYp](https://lh4.googleusercontent.com/DUay-Hpbwsf3-dROkK2F0q946F5FDshNzTApo0jUPud2OR7oShhmhbV_gbPo9gCS2N8dWzoRx7FKOxyqrVb07jiETwYPa-zaCXZq5gh_jRQpo4zbZHW-Ibsp18k2suKg4iXxFOYp)

    This is not a payment confirmation yet, but it's a good indication that the payment will go through. However, only when we have a real confirmation will we send you the notifications, via [webhook](#section/Basics/4.-Webhook). 
    For example, if the customer selected Ethereum, it can take around 5-10 mins for the full confirmation. 

    ## 3. Build the order

    Now that you understand the flow and tried it, let's build it!

    ### 3.1. Sandbox vs. Production

    To distinguish between sandbox and production environments we have ‚Äú**sandbox-utrust.com**‚Äù and ‚Äú**utrust.com**‚Äù domains, respectively. All the endpoints should use the respective domain for the environment that you wish 
    to work on.

    ### 3.2. Sign up on Sandbox

    First you need a Merchant account on our testing environment (sandbox), [follow this link](https://merchants.sandbox-utrust.com/onboarding/sign-up).
    Fill the form and there you go! You should have access.
    ![https://lh5.googleusercontent.com/8kHwTkyNVPLffHz7YXs8e8AkjBi9CaVpZILeZyu7UfgpdC54_hGwd4dHhS3VWlwwL8iDL6FnQ7k9suvNPLOr8_ERutHf8DUdBWoZm5CsOSfpeRc5nMzti0S4qzJv2LWYYLLf8sLK](https://lh5.googleusercontent.com/8kHwTkyNVPLffHz7YXs8e8AkjBi9CaVpZILeZyu7UfgpdC54_hGwd4dHhS3VWlwwL8iDL6FnQ7k9suvNPLOr8_ERutHf8DUdBWoZm5CsOSfpeRc5nMzti0S4qzJv2LWYYLLf8sLK)

    You can add more users to the production account if needed, ask us.

    ### 3.3. Authentication

    You‚Äôll receive an email with the information needed in order to access it. After that, the first thing you need is to generate credentials for your store, which can be done in the Utrust Merchant Dashboard. Once inside, go to the Organization Settings section and click on the ‚ÄúGenerate Credentials‚Äù button:

    ![https://lh4.googleusercontent.com/MSRtlHQ8wou0b3-SGOLDgx7cizPiXoVNwCZpE1zMFrtR_1i8Mh1Vz6MA8elRhYmgR3RowoMJnL0FpYviyN7buUxez_xDoZm8yIUiqLfcMLkhYD4SSbevbrPWNqPKmVPj5m-BBZMb](https://lh4.googleusercontent.com/MSRtlHQ8wou0b3-SGOLDgx7cizPiXoVNwCZpE1zMFrtR_1i8Mh1Vz6MA8elRhYmgR3RowoMJnL0FpYviyN7buUxez_xDoZm8yIUiqLfcMLkhYD4SSbevbrPWNqPKmVPj5m-BBZMb)

    You‚Äôll then be prompted with the `API Key` and `Webhooks Secret` for your store. Save this information somewhere, as you won‚Äôt be able to access it again (you can, of course, generate new credentials).

    ![https://lh4.googleusercontent.com/EVgweG5O8wwO8aGk4woHaRVU-cg4TqpizsqQDlEcwehtCgQ4qAFcVVz5jSHhWeNIWIznbbhewkTFQOogyrPnkJWC0MUGgtUlS4t22otUBX0sASunQSE7Kryo7pB1cen9keGKrpum](https://lh4.googleusercontent.com/EVgweG5O8wwO8aGk4woHaRVU-cg4TqpizsqQDlEcwehtCgQ4qAFcVVz5jSHhWeNIWIznbbhewkTFQOogyrPnkJWC0MUGgtUlS4t22otUBX0sASunQSE7Kryo7pB1cen9keGKrpum)

    ### 3.4. Creating the order

    Once you have all the information needed from a customer and all that‚Äôs missing is paying, you can inform us of that by calling the [create order endpoint](https://docs.api.utrust.com/#operation/createOrder). Don't forget 
    to add the `api key` on the headers (as a Bearer token).
    The response is a URL to which you should redirect the customer, on success we will redirect them to the `return_url` and on customer cancel to the `cancel_url` (if present).

    ### 3.5. Add the Utrust method option on Checkout

    When listing our payment method in your store, you can use [these assets](#section/Basics/5.-Assets).

    ### 3.6. Going into production

    All tests went good and you want to move into production? To create a `production` account [go here](https://merchants.utrust.com/).
    You can sign up in production, but your account needs to be revised and enabled by the Utrust team.
    If you need to add more users, please let us know and we will add them manually to the same Organization.
    You will have to generate your production credentials.

    ## 4. Webhook

    You might want to update the status of your Order automatically when we confirm the payment. We use webhooks to send you that information. 
    This events need to be validated so that you are sure they are real and coming from Utrust, that's for what the `Webhooks Secret` is for.
    Our [integrations](#section/Integrations) handle this automatically. Alternativaly, you can use our [libraries](#section/Libraries) to verify the payload signature or manually using the instructions in our [API Reference 
    Webhooks](https://docs.api.utrust.com/#tag/Webhooks) section. 

    ### Being notified of payment confirmation

    After the payment is confirmed, we will send an HTTP POST request to whatever you specified as `callback_url` when creating the order. All the information about 
    being ready for these requests (and validating them) are explained also on the [API Reference Webhooks](https://docs.api.utrust.com/#tag/Webhooks).

    You will need to get ready for the following steps:

    1. Setting up a webhook on the endpoint you defined as `callback_url`;
    2. Check if the signature is valid;
    3. If is valid, check the `event_type`, it can be:

        a. If it's `ORDER.PAYMENT.RECEIVED` ‚Üí you should change the Order to `paid` or whatever you have as the next step in your orders process;

        b. If it's `ORDER.PAYMENT.CANCELLED` ‚Üí you should change the Order to `cancelled`;
        
        c. If it's `ORDER.PAYMENT.FAILED` ‚Üí you should change the Order to `cancelled` or `failed`;

    4. Then you need to reply our request:

        a. If everything went well ‚Üí status: **200 OK**; with no body or a valid JSON (e.g. `{ success: true }`);

        b. If something went wrong ‚Üí status: **500 Internal Server Error**;

    This way we know what happened on your server and we can stop retrying to send the webhook. We will do it once a minute for 10 minutes. 

    Check more about this on our [API Reference Webhooks](https://docs.api.utrust.com/#tag/Webhooks).

    ## 5. Assets

    You might need our logo for listing it on the payment methods options and your website footer. The following kit should provide you with the necessary options for that: 
    [Utrust_Merchant_kit.zip](https://github.com/utrustdev/utrust-developers-page/files/3917494/Utrust.merchant.kit.v2.zip)

    # Integrations

    ## Magento 1
    Start accepting cryptocurrencies in your Magento 1 store with our module hosted on [GitHub](https://github.com/utrustdev/utrust-for-magento1).

    ## Magento 2
    Start accepting cryptocurrencies in your Magento 2 store with our module hosted on [GitHub](https://github.com/utrustdev/utrust-for-magento2).

    ## PrestaShop
    Start accepting cryptocurrencies in your PrestaShop store with our module hosted on [GitHub](https://github.com/utrustdev/utrust-for-prestashop).

    ## WooCommerce
    Start accepting cryptocurrencies in your WooCommerce store with our module hosted on [GitHub](https://github.com/utrustdev/utrust-for-woocommerce).

    # Libraries

    ## PHP

    We've put in place a simple PHP library to get you started easily with the core functionalities of our payment method. Available via composer:
    ```
    composer require utrust/utrust
    ```
    Check the code hosted on [GitHub](https://github.com/utrustdev/utrust-php).

    # APIs 

    Utrust provides two API's for your use: Stores API and Merchants API.

    [Utrust API Reference ‚Üí](https://docs.api.utrust.com)

paths: false
